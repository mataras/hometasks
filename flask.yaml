---
- hosts: all
  user: mataras
  become: true
  become_user: root
  tasks:
  - name: Install python3 pip curl
    apt:
      pkg:
      - python3
      - python3-pip
      - curl
      update_cache: yes

  - name: Install  python modules 
    pip:
      name: 
      - flask
      - emoji 

  - name: Flush existing firewall rules
    iptables:
      flush: true

  - name: Firewall rule - allow all loopback traffic
    iptables:
      action: append
      chain: INPUT
      in_interface: lo
      jump: ACCEPT

  - name: Firewall rule - allow established connections
    iptables:
      chain: INPUT
      ctstate: ESTABLISHED,RELATED
      jump: ACCEPT

  - name: Firewall rule - allow port ping traffic
    iptables:
      chain: INPUT
      jump: ACCEPT
      protocol: icmp

  - name: Firewall rule - allow port 22/SSH traffic
    iptables:
      chain: INPUT
      destination_port: 22
      jump: ACCEPT
      protocol: tcp

  - name: Firewall rule - allow port 80/HTTP traffic
    iptables:
      chain: INPUT
      destination_port: 80
      jump: ACCEPT
      protocol: tcp

  - name: Firewall rule - allow port 443/HTTPS traffic
    iptables:
      chain: INPUT
      destination_port: 443
      jump: ACCEPT
      protocol: tcp
  - name: Firewall rule - drop any traffic without rule
    iptables:
      chain: INPUT
      jump: DROP

  - name: Firewall rule - allow port ping traffic
    iptables:
      chain: INPUT
      jump: ACCEPT
      protocol: icmp

  - name: Firewall rule - allow port 22/SSH traffic
    iptables:
      chain: INPUT
      destination_port: 22
      jump: ACCEPT
      protocol: tcp

  - name: Firewall rule - allow port 80/HTTP traffic
    iptables:
      chain: INPUT
      destination_port: 80
      jump: ACCEPT
      protocol: tcp

  - name: Firewall rule - allow port 443/HTTPS traffic
    iptables:
      chain: INPUT
      destination_port: 443
      jump: ACCEPT
      protocol: tcp
  - name: Firewall rule - drop any traffic without rule
    iptables:
      chain: INPUT
      jump: DROP

  - name: Install `netfilter-persistent` && `iptables-persistent` packages
    package:
      name: "{{item}}"
      state: present
    with_items:
     - iptables-persistent
     - netfilter-persistent

  - name: Disable root login
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^#PermitRootLogin '
      line: 'PermitRootLogin no' 

  - name: Enable pubkey authentication
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^#PubkeyAuthentication  '
      line: 'PubkeyAuthentication  yes'

  - name: Restart service sshd 
    ansible.builtin.service:
      name: sshd
      state: restarted
  
  - name: Copy python file with owner and permissions
    ansible.builtin.copy:
      src: /root/ansible/flaskapp.py
      dest: /opt
      owner: mataras
      group: mataras
      mode: '0744'

  - name: Allows to run automatically python script after reboot
    ansible.builtin.cron:
      name: "a job with flask for reboot"
      special_time: reboot
      job: "/opt/flaskapp.py"  

  - name: Reboot a machine
    reboot:
      reboot_timeout: 40

  - name: Check connection using curl and print output 
    ansible.builtin.shell: |
            curl -XPOST -d'{"word":"evilmartian", "count": 3}' http://localhost
    register: curl_output
  - debug:
      var: curl_output.stdout_lines
